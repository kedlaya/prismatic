<section xml:id="sec_homotopy-categories">
  <title>Homotopy categories</title>
  <introduction>
    <paragraphs>
      <title>Reference</title>
      <p>
        <xref ref="bib-Stacks"/>, tag 05QI or <xref ref="bib-Weibel"/>, Chapter 10.
      </p>
    </paragraphs>
    <p>
      In this section, we fill in some background material about <term>homotopy categories</term>. Our immediate need for this is to 
      define derived functors of complexes.
      We will assume (as we have already done up to now) that the reader is familiar with a more classical treatment of
      homological algebra. (We postpone the introduction of <term>derived categories</term> until <xref ref="sec_derived-categories"/>.)
    </p>
    <p>
      Throughout this section, let <m>\calA</m> be a fixed abelian category, e.g., <m>\Mod_A</m> for some <m>A \in \Ring</m>.
      (This is not the weakest hypothesis possible on <m>\calA</m>, but will suffice for our purposes.)
    </p>
  </introduction>
  <subsection>
    <title>A bit of motivation</title>
    <p>
      By way of motivation, we recall the way that chain complexes appear in the construction of derived functors.
      We discuss only right derived functors, the story for left derived functors being the symmetric image of this.
    </p>
    <definition>
      <p>
         Let <m>\calA'</m> be a second abelian category. A covariant functor <m>F: \calA \to \calA'</m> is <term>left exact</term> if every exact sequence
         <me>
         0 \to M_1 \to M \to M_2
         </me>
         yields an exact sequence
         <me>
         0 \to F(M_1) \to F(M) \to F(M_2).
         </me>
         Under suitable conditions (namely, that <m>\calA</m> <term>has enough injectives</term>), 
         we can <q>fill in the gap</q> on the right: if the original sequence extends to an exact sequence
         <me>
         0 \to M_1 \to M \to M_2 \to 0,
         </me>
         then we get a long exact sequence
         <me>
         0 \to R^0 F(M_1) \to R^0F (M) \to R^0F(M_2) \to R^1 F(M_1) \to R^1 F(M) \to R^1 F(M_2) \to R^1 F(M_1) \to \cdots
         </me>
         where <m>R^i F</m> are the <term>right derived functors</term>  of <m>F</m> (with <m>R^0 F = F</m>). These functors can be evaluated at <m>M</m> by forming an
         <term>injective resolution</term> of <m>M</m>, i.e., a complex
         <men xml:id="eq-injective-resolution">
           0 \to I^0 \to I^1 \to \dots
         </men>
         in which each object <m>I^j \in \calA</m> is <term>injective</term> (that is, <m>\Hom(N, I^j) \to \Hom(N', I^j)</m> is surjective whenever <m>N' \to N</m> is a monomorphism)
         and the augmented sequence
         <me>
           0 \to M \to I^0 \to I^1 \to \cdots
         </me>
         is exact; then <m>RF^i</m> is the cohomology at <m>i</m> of the complex
         <me>
           0 \to F(I^0) \to F(I^1) \to \cdots.
         </me>
         However, there is some work to be done to confirm that these are well-defined functors.
      </p>
    </definition>
    <remark xml:id="rmk-derived-motivation">
      <p>
        What we want to do here is create a larger category than <m>\calA</m> in which the injective resolution <xref ref="eq-injective-resolution"/> is itself an object
        <em>and</em> any two injective resolutions are canonically isomorphic in this new category. This will have various practical advantages when trying to work
        with derived functors.
      </p>
      <p>
        For example, when composing left exact functors, if one only keeps track of the derived functors individually, the most one can say about the derived functors
        of the composition is that they are the limit of the <term>Grothendieck spectral sequence</term>, but this leaves some ambiguity if you do not know what the differentials are
        (and anyway being the limit of a spectral sequence does not determine the final objects exactly, only the successive quotients of some filtration. By contrast,
        when working in the homotopy category this ambiguity is completely eliminated by the fact that we can define derived functors not just for objects, but also for complexes.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Categories of chain complexes</title>
    <p>
      As a first step, we construct a category of chain complexes.
    </p>
    <definition>
      <p>
        A <term>chain complex</term> in <m>\calA</m> is a sequence
        <me>
         \cdots \to K^{n-1} \stackrel{d^{n-1}}{\to} K^n \stackrel{d^n}{\to} K^{n+1} \to \cdots
        </me>
        in <m>\calA</m> such that any two consecutive morphisms compose to zero.
        The morphisms <m>d^n</m> are commonly called the <term>differentials</term> of the complex.
        (Note that here I am using <term>cohomological numbering</term> rather than <term>homological numbering</term>.)
      </p>
      <p>
        A complex <m>K^\bullet</m> is:
        <ul>
          <li>
            <p>
              <term>bounded below</term> if <m>K^n = 0</m> for all <m>n \ll 0</m>;
            </p>
          </li>
          <li>
            <p>
              <term>bounded above</term> if <m>K^n = 0</m> for all <m>n \gg 0</m>;
            </p>
          </li>
          <li>
            <p>
              <term>bounded</term> if both of these hold.
            </p>
          </li>
        </ul>
      </p>
    </definition>
    <definition>
      <p>
        We view chain complexes as forming a category <m>\Comp(\calA)</m>
        in which a morphism <m>f^\bullet: K_1^\bullet \to K_2^\bullet</m> is given by a commutative diagram
        <figure xml:id="fig-morphism-of-complexes">
          <image width="75%">
            <latex-image>
              \xymatrix{
              \cdots \ar[r] &amp; K_1^{n-1} \ar^{d^{n-1}_1}[r] \ar^{f^{n-1}}[d] &amp; K_1^n \ar^{d^n_1}[r] \ar^{f^n}[d] &amp; K_1^{n+1} \ar^{d^{n+1}_1}[r] \ar^{f^{n+1}}[d] &amp; \cdots \\
              \cdots \ar[r] &amp; K_2^{n-1} \ar^{d^{n-1}_2}[r] &amp; K_2^n \ar^{d^n_2}[r] &amp; K_2^{n+1} \ar^{d^{n+1}_2}[r] &amp; \cdots
              }
            </latex-image>
          </image>
        </figure>
        such a morphism induces morphisms on cohomology groups <m>h^n(K_1^\bullet) \to h^n(K_2^\bullet)</m>. 
        Let <m>\Comp^+(\calA), \Comp^-(\calA), \Comp^b(\calA)</m> be the full subcategories of <m>\Comp(\calA)</m>
        consisting of bounded below complexes, bounded above complexes, or bounded complexes, respectively.
        Any functor <m>F: \calA \to \calA'</m> of abelian categories induces functors <m>\Comp^*(\calA) \to \Comp^*(\calA')</m>
        for each of <m>* \in \{\emptyset, +, -, b\}</m>.
      </p>
    </definition>
    <definition>
      <p>
        For each integer <m>i \in \ZZ</m>, we have a functor <m>[i]: \calA \to \Comp^b(\calA)</m> taking <m>M \in \calA</m> to the complex <m>K^\bullet</m> with
        <me>
          K^n = \begin{cases} M &amp; n=-i \\ 0 &amp; n \neq i. \end{cases}
        </me>
        (note the minus sign). This extends to a functor <m>[i]: \Comp^*(\calA) \to \Comp^*(\calA)</m> given by
        <me>
          K[i]^n = K^{n+i}.
        </me>
      </p>
      <p>
        In the other direction, we have a functor <m>H^i: \Comp(\calA) \to \calA</m> (the <term><m>i</m>-th cohomology</term> given by
        <me>
          H^i(K^\bullet) = \ker(d^{i})/\im(d^{i-1}).
        </me>
        The composition <m>H^i \circ [-i]</m> is an equivalence of categories. In particular, each functor <m>[i]:\calA \to \Comp^b(\calA)</m> defines a full embedding.
      </p>
      <p>
        A morphism in <m>\Comp(\calA)</m> is a <term>quasi-isomorphism</term> if its image under each <m>h^i</m> is an isomorphism.
        In general, such a morphism need not have an inverse.
      </p>
    </definition>
    <remark xml:id="rmk-derived-motivation2">
      <p>
        Returning to <xref ref="rmk-derived-motivation"/>, we now see that an injective resolution <m>I^\bullet</m> of an object <m>M \in \calA</m> does define an object of
        <m>\Comp^+(\calA)</m> and the augmentation defines a morphism <m>M[0] \to I^\bullet</m> in <m>\Comp^+(\calA)</m>. However, it is not the case
        that different injective resolutions define the <term>same</term> object (or more precisely, canonically isomorphic objects) in <m>\Comp^+(\calA)</m>.
        The construction of the homotopy category will resolve this issue.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Split exact sequences</title>
    <p>
      Continuing by way of motivation, we recall another basic construction in homological algebra.
    </p>
    <definition xml:id="def-split-exact-sequence">
      <p>
        A short exact sequence
        <me>
          0 \to M \stackrel{f}{\to} N \stackrel{g}{\to} P \to 0
        </me>
        in <m>\calA</m> is <term>split</term> if any of the following equivalent conditions hold.
      </p>
      <ol>
        <li>
          <p>
            There exists a morphism <m>t: N \to M</m> such that <m>t \circ f = \id_M</m>.
          </p>
        </li>
        <li>
          <p>
            There exists a morphism <m>s: P \to N</m> such that <m>g \circ s = \id_P</m>.
          </p>
        </li>
      </ol>
      <p>
        The existence of a splitting guarantees that for any functor <m>F: \calA \to \calA'</m>, the sequence
        <me>
          0 \to F(M) \stackrel{F(f)}{\to} F(N) \stackrel{F(g)}{\to} F(P) \to 0
        </me>
        is again split exact <em>whether or not</em> <m>F</m> is an exact functor.
      </p>
    </definition>
    <remark>
      <p>
        In <xref ref="def-split-exact-sequence"/>, the equivalence from the two conditions comes from the fact that in either condition, reversing the order of composition
        yields an idempotent endomorphism (i.e., a <term>projector</term>) on <m>N</m>. In particular, we can always choose the two splittings <m>s,t</m> so that
        <m>f \circ t + s \circ g = \id_N</m>. The maps <m>s,t</m> together provide a <q>robust witness</q> to the exactness of the sequence.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Chain complexes and the homotopy category</title>
    <p>
      The discussion of split exact sequences can be generalized as follows.
    </p>
    <definition>
      <p>
        A <term>chain homotopy</term> for a morphism <m>f: K_1^\bullet \to K_2^\bullet</m> in <m>\Comp(\calA)</m>
        is a collection of morphisms <m>h_n: K_1^n \to K_2^{n-1}</m> such that
        <me>
          d^{n-1}_2 \circ h_n + h_{n+1} \circ d^n_1 = f^n \qquad (n \in \ZZ).
        </me>
        This implies that <m>f</m> maps to the zero morphism via each cohomology functor <m>h^n</m>.
        If such a homotopy exists, we say that <m>f</m> is <term>homotopic to <m>0</m></term>; similarly, if <m>f, g: K_1^\bullet \to K_2^\bullet</m>
        are two morphisms and <m>f-g</m> is homotopic to 0, we say that <m>f</m> and <m>g</m> are <term>homotopic (to each other)</term>.
      </p>
      <p>
        Note that morphisms homotopic to zero form a two-sided ideal under composition.
        We may thus define the <term>homotopy category</term> of <m>\calA</m>, denoted <m>K(\calA)</m>,
        to be the category with the same objects as <m>\Comp(\calA)</m> but where the group of morphisms from <m>K_1^\bullet</m> to <m>K_2^\bullet</m>
        is the quotient of the group of morphisms in <m>\Comp(\calA)</m> by the ideal of morphisms homotopic to 0.
        We may similarly define <m>K^+(\calA), K^-(\calA), K^b(\calA)</m> as quotients of <m>\Comp^+(\calA), \Comp^-(\calA), \Comp^b(\calA)</m>;
        these are the <term>bounded below homotopy category</term>, the <term>bounded above homotopy category</term>, and the <term>bounded homotopy category</term>
        of <m>\calA</m>.
      </p>
      <p>
        The functors <m>H^i: \Comp(\calA) \to \calA</m> factor through <m>K(\calA)</m> and satisfy
        <me>
          H^i = H^0 \circ [i].
        </me>
        In particular, any isomorphism in <m>K(\calA)</m> induces isomorphisms of cohomology groups.
        Any functor <m>\calA \to \calA'</m> induces a corresponding functor <m>K^*(\calA) \to K^*(\calA')</m>.
      </p>
    </definition>
    <p>
      Returning to <xref ref="rmk-derived-motivation"/>, using the universal property of injective objects, it is straightforward to check the following.
    </p>
    <lemma xml:id="lem-injective-resolutions">
      <statement>
      <p>
        For <m>M \in \calA</m>, let <m>I^\bullet</m> and <m>J^\bullet</m> be two injective resolutions of <m>M</m>.
      </p>
        <ol>
          <li>
            <p>
              There exists a morphism <m>I^\bullet \to J^\bullet</m> in <m>\Comp^+(\calA)</m> which commute with the augmentations <m>M[0] \to I^\bullet</m>, <m>M[0] \to J^\bullet</m>.
            </p>
          </li>
          <li>
            <p>
              Any two such morphisms are homotopic to each other.
            </p>
          </li>
          <li>
            <p>
              In particular, the classes of <m>I^\bullet</m> and <m>J^\bullet</m> in <m>K^+(\calA)</m> are canonically isomorphic.
            </p>
          </li>
        </ol>
      </statement>
      <proof>
        <p>
          Left to the reader, or see <xref ref="bib-Stacks"/>, tag 013P.
        </p>
      </proof>
    </lemma>
  </subsection>
  <subsection>
    <title>Derived functors revisited</title>
    <definition xml:id="def-derived-functions-homotopy-category">
      <p>
        Suppose that the abelian category <m>\calA</m> has enough injectives (e.g., <m>\calA = \Mod_A</m>). 
        Then every object <m>M \in \calA</m> admits an injective resolution.
        In fact, by <xref ref="lem-injective-resolutions"/>, there is a canonical morphism <m>M[0] \to I^\bullet</m> in <m>K^+(\calA)</m> in which the target is
        an injective resolution.
      </p>
      <p>
        Now let <m>F: \calA \to \calA'</m> be a left exact (covariant) functor. The right derived functors <m>R^i F</m> can then be evaluated on <m>M</m>
        by taking cohomology of the object <m>F(I^\bullet)</m>; in fact, we can think of <m>M \mapsto F(I^\bullet)</m> as defining a single <term>derived functor</term>
        <m>RF: \calA \to K^+(\calA)</m>.
      </p>
      <p>
        In fact, every object of <m>K^+(\calA)</m> can likewise be resolved by injectives, so we can extend the derived functor
        to <m>RF: K^+(\calA) \to K^+(\calA)</m>. For example, we have the <term>derived Hom</term> <m>R\Hom_A(M, \bullet) </m> which computes <m>\Ext</m> groups.
      </p>
      <p>
        Similarly, if <m>\calA</m> has enough projectives and <m>F</m> is a right exact covariant functor, we can define a left derived functor
        <m>LF: K^-(\calA) \to K^-(\calA)</m>. For example, we have the <term>derived tensor product</term> <m>M \otimes^L_A \bullet</m> 
        which computes <m>\Tor</m> groups.
      </p>
    </definition>
    <remark xml:id="rmk-derived-motivation3">
      <p>
        We can still improve upon the situation: the morphism from an object <m>M \in \calA</m> to an injective resolution is a <term>quasi-isomorphism</term>,
        in that it induces isomorphisms of cohomology, but is not itself an isomorphism in <m>K^+(\calA)</m>. To form the <term>derived category</term> we would like
        to resolve this issue by formally inverting all quasi-isomorphisms; this involves a localization process similar to, but more complicated than, the 
        localization of rings in commutative (or noncommutative) algebra. See <xref ref="sec_derived-categories"/> for further discussion.
      </p>
    </remark>
  </subsection>
</section>
