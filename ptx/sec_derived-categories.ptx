<section xml:id="sec_derived-categories">
  <title>Derived categories</title>
  <introduction>
    <paragraphs>
      <title>Reference</title>
      <p>
        <xref ref="bib-Stacks"/>, tag 05QI or <xref ref="bib-Weibel"/>, Chapter 10; we are skipping a <em>lot</em> of details. We do not develop the point of view of triangulated categories
        very thoroughly; for more on that point of view, see <xref ref="bib-Kiehl-Weissauer"/>, Chapter II.
      </p>
    </paragraphs>
    <p>
      We pick up from <xref ref="sec_homotopy-categories"/> (retaining notation) and introduce the <term>derived category</term> associated to an abelian category.
      This amounts to checking that we can perform the localization of the homotopy category <m>K(\calA)</m> at the family of quasi-isomorphisms.
    </p>
    <p>
      Here we take a <q>classical</q> point of view on derived categories; however, it is better in the long run to express the construction in the language of
      <term><m>\infty</m>-categories</term>. See <xref ref="subsec-derived-infinity-category"/> for a further remark in this vein.
    </p>
  </introduction>
  <subsection>
    <title>Localization in a category</title>
    <remark>
      <p>
        Recall from <xref ref="rmk-derived-motivation3"/> that we are in the situation of having to construct one category from another by <q>formally inverting</q>
        some morphisms. We are familiar with processes of these type from algebra, such as the group completion of a monoid (e.g., passage from positive integers to
        arbitrary integers) or the localization of a ring at a multiplicative subset (e.g., passage from integers to rational numbers).
        The category-theoretic situation is similar but rather fraught with arrows, and somewhat complicated by the fact that composition of morphisms
        is not commutative. Similar (but a bit less fraught) considerations apply to localization in a <em>noncommutative</em> ring.
      </p>
      <p>
        To isolate a key difficulty, imagine trying to define a morphism in the localization category as a formal composition
        <m>g^{-1} \circ f</m> where <m>f</m> is a morphism and <m>g^{-1}</m> is the <q>formal inverse</q> of another morphism. Then
        the composition of two such morphisms would have the form <m>g_1^{-1} \circ f_1 \circ g_2^{-1} \circ f_2</m> and we would then need to
        rewrite the inner composition <m>f_1 \circ g_2^{-1}</m> as a composition <m>g_3^{-1} \circ f_3</m> in the opposite order.
        Then the total composition would become
        <me>
          g_1^{-1} \circ g_3^{-1} \circ f_3 \circ f_2 = (g_3 \circ g_1)^{-1} \circ (f_2 \circ f_3)
        </me>
        which has the right form.
      </p>
      <p>
        We give only a brief summary of the formalism needed to make this idea work. See <xref ref="bib-Stacks"/>, tag 04VB for further details.
      </p>
    </remark>
    <definition xml:id="def-multiplicative-system">
      <p>
        Let <m>\calC</m> be a category (not necessarily abelian or even additive). Let <m>S</m> be a collection of morphisms in <m>\calC</m>. We say that <m>S</m> is a
        <term>left multiplicative system</term> if the following conditions hold.
      </p>
      <ol>
        <li>
          <p>
            The collection <m>S</m> contains all identity morphisms and is closed under composition (of composable pairs).
          </p>
        </li>
        <li>
          <p>
            Given the solid arrows as in <xref ref="fig-localization-categories"/> with <m>t \in S</m>, for some choice of <m>Y'</m> there exist dashed arrows with <m>s \in S</m> forming a commutative square.
          </p>
          <figure xml:id="fig-localization-categories">
            <image width="25%">
              <latex-image>
                \xymatrix{
                  X \ar^{g}[r] \ar^{t}[d] &amp; Y \ar@{-->}^{s}[d] \\ X' \ar@{-->}^{f}[r] &amp; Y'
                }
              </latex-image>
            </image>
          </figure>
          <p>
            You should think of this as saying that the <q>formal composition</q> <m>g \circ t^{-1}: Z \to Y</m> can be refactored as <m>s^{-1} \circ f</m>,
            with the formal inverse moved from the right to the left.
          </p>
        </li>
        <li>
          <p>
            For every pair of morphisms <m>f,g: X \to Y</m> and every <m>t \in S</m> with target <m>X</m> such that <m>f \circ t = g \circ t</m>,
            there exists a morphism <m>s \in S</m> with source <m>Y</m> (and unspecified target) such that <m>s \circ f = s \circ g</m>.
            (In this case, the morphisms <m>f</m> and <m>g</m> are going to be conflated in the localization, and we want that to make sense with respect to composition on both sides.)
          </p>
          <p>
            If <m>\calC</m> is an additive category, it is equivalent to require that for every morphism 
            <m>f: X \to Y</m> and every <m>t \in S</m> with target <m>X</m> such that <m>f \circ t = 0</m>,
            there exists a morphism <m>s \in S</m> with source <m>Y</m> (and unspecified target) such that <m>s \circ f = 0</m>.
          </p>
        </li>
      </ol>
      <p>
        Similarly, a <term>right multiplicative system</term> is a collection of morphisms of <m>\calC</m> that constitutes a left multiplicative system in the opposite category.
        A <term>multiplicative system</term> is a collection of morphisms of <m>\calC</m> which is simultaneously a left multiplicative system and a right multiplicative system.
      </p>
      <p>
        We say that a multiplicative system is <term>saturated</term> if for any three composable morphisms <m>f,g,h</m> with <m>f \circ g, g \circ h \in S</m>, we also have <m>g \in S</m>.
        For example, the collection of all isomorphisms has this property.
      </p>
    </definition>
    <definition xml:id="def-left-localization">
      <p>
        Let <m>\calC</m> be a category and let <m>S</m> be a multiplicative system. We define the category <m>S^{-1} \calC</m> as follows. 
        (There are some steps to verify that this is a well-posed definition of a category; see <xref ref="bib-Stacks"/>, tag 04VD.)
        <ol>
          <li>
            <p>
              The objects of <m>S^{-1} \calC</m> are the objects of <m>\calC</m>.
            </p>
          </li>
          <li>
            <p>
              For <m>X,Y \in \calC</m> two objects, the morphisms <m>X \to Y</m> in <m>\calC</m> are given by pairs <m>(f: X \to Y', s: Y \to Y')</m>
              where <m>Y' \in \calC</m> is a third object
              modulo the following equivalence relation: two pairs
              <me>(f_i: X \to Y_i, s_i: Y \to Y_i)</me> for <m>i=1,2</m> are equivalent if there is a third pair with <m>i=3</m> fitting into a diagram as in
              <xref ref="fig-localization-category-equivalence"/> for some morphisms <m>Y_i \to Y_3</m> in <m>\calC</m> (not necessarily in <m>S</m>).
            </p>
            <figure xml:id="fig-localization-category-equivalence">
              <image width="50%">
                <latex-image>
                  \xymatrix{
                    &amp; Y_1 \ar[d] \\
                   X \ar^{f_1}[ru] \ar^{f_3}[r] \ar_{f_2}[rd] &amp; Y_3 &amp; Y \ar_{s_1}[lu] \ar_{s_3}[l] \ar^{s_2}[ld] \\
                   &amp; Y_2 \ar[u]
                  }
                </latex-image>
              </image>
             </figure>
             <p>
              You should think of a pair <m>(f,s)</m> as corresponding to the formal composition <m>s^{-1} \circ f</m>.
             </p>
          </li>
          <li>
            <p>
              The composition of a pair  <m>(f: X \to Y', s: Y \to Y')</m> with a pair <m>(g: Y \to Z', t: Z \to Z')</m> is defined to be the equivalence class of a pair
              <m>(h \circ f: X \to Z'', u \circ t: Z \to Z'')</m> where <m>h</m> and <m>u \in S</m> are chosen (using the definition of a left multiplicative system)
              to fill in the commutative square <xref ref="fig-localization-categories1"/>.
            </p>
            <figure xml:id="fig-localization-categories1">
              <image width="25%">
                <latex-image>
                  \xymatrix{
                    Y \ar^{g}[r] \ar^{s}[d] &amp; Z' \ar@{-->}^{u}[d] \\ Y' \ar@{-->}^{h}[r] &amp; Z''
                  }
                </latex-image>
              </image>
            </figure>
            <p>
              The identity morphism on <m>X</m> is the class of <m>(\id_X, \id_X)</m>.
            </p>
          </li>
        </ol>
      </p>
      <p>
        One can similarly form the localization of the opposite category, then take the opposite category of the result
        (using the definition of a right multiplicative system). This gives the same answer; see <xref ref="bib-Stacks"/>, tag 04VL.
      </p>
      <p>
        The morphisms of <m>\calC</m> which become isomorphisms in <m>S^{-1} \calC</m> also form a multiplicative system; in fact, this is the
        smallest saturated multiplicative system containing <m>S</m> (<xref ref="bib-Stacks"/>, tag 04VB), and so equals <m>S</m> if and only if <m>S</m>
        is itself saturated.
      </p>
    </definition>
    <remark>
      <p>
        In <xref ref="def-left-localization"/>, we have glossed over a serious set-theoretic difficulty; since the definition of a morphism is quantified over an unspecified
        third object <m>Y'</m> of <m>\calC</m>, it is not clear that the collection of morphisms between two fixed objects is a set, as is required in the definition of a category.
      </p>
      <p>
        One way to avoid this issue is to only consider localizations of categories which are <term>small</term>, meaning that there is a set of objects
        which meets every isomorphism class. Then one can instead quantify <m>Y'</m> over this set of representatives without losing anything.
      </p>
      <p>
        A more robust mechanism is to use the <term>Gabriel-Zisman theorem</term> which gives a criterion for constructing localizations even when the ambient category is not small.
        See <xref ref="bib-Weibel"/>, Theorem 10.3.7.
      </p>
    </remark>
    <remark>
      <p>
        There is a way to interpret ring-theoretic localization as a special case of localization of categories. See <xref ref="bib-Stacks"/>, tag 0BM1.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Distinguished triangles</title>
    <p>
      Recall that a short exact sequence of complexes gives rise to a long exact sequence of cohomology groups. This serves as inspiration for the following
      discussion of <term>triangles</term> in the homotopy category.
    </p>
    <definition>
      <p>
        A <term>triangle</term> in <m>\Comp(\calA)</m> is a tuple <m>(A^\bullet, B^\bullet, C^\bullet, \alpha, \beta, \delta)</m> coming from a diagram of the form
        <me>
          A^\bullet \stackrel{\alpha}{\to} B^\bullet \stackrel{\beta}{\to} C^\bullet \stackrel{\delta}{\to} A^\bullet[1]
        </me>
        which is a complex; that is, the compositions
        <md>
          <mrow>A^\bullet \to B^\bullet \to C^\bullet</mrow>
          <mrow>B^\bullet \to C^\bullet \to A^\bullet[1]</mrow>
          <mrow>C^\bullet \to A^\bullet[1] \to B^\bullet[1]</mrow>
        </md>
        are zero. We can then consider morphisms of triangles in either <m>\Comp(\calA)</m> or <m>K(\calA)</m>.
      </p>
      <p>
        We can define an operation called <term>forward rotation</term> on the set of triangles:
        <me>
          (A^\bullet, B^\bullet, C^\bullet, \alpha, \beta, \delta) \mapsto (B^\bullet, C^\bullet, A[1]^\bullet, \beta, \delta, -\alpha[1])
        </me>
        (note the minus sign). The inverse operation is <term>backward rotation</term>.
      </p>
    </definition>
    <p>
      Here is a key family of examples.
    </p>
    <definition>
      <p>
        For a morphism <m>f: K^\bullet \to L^\bullet</m> in <m>\Comp(\calA)</m>, the <term>cone</term> (or <term>mapping cone</term>) of <m>f</m> is the complex
        <me>
          \Cone(f)^n = L^n \oplus K^{n+1}, \qquad d^n_{\Cone(f)} = \begin{pmatrix} d^n_L &amp; f^{n+1} \\ 0 &amp; -d^{n+1}_K \end{pmatrix}.
        </me>
        This complex fits into a triangle
        <me>
          K^\bullet \stackrel{f}{\to} L^\bullet \to \Cone(f)^\bullet \to K^\bullet[1]
        </me>
        where the maps in and out of <m>\Cone(f)^\bullet</m> are the obvious ones.
        Any triangle isomorphic to one of this form is said to be <term>distinguished</term>.
      </p>
    </definition>
    <lemma xml:id="lem-homological-functor">
      <statement>
        <p>
          For any distinguished triangle <m>(A^\bullet, B^\bullet, C^\bullet, \alpha, \beta, \delta)</m>, the sequence
          <me>
            \cdots \to H^i(A^\bullet) \stackrel{\alpha}{\to} H^i(B^\bullet) \stackrel{\beta}{\to} H^i(C^\bullet) \stackrel{\delta}{\to} H^{i+1}(A^\bullet) \to \cdots
          </me>
          is exact. That is, <m>H^0</m> is a <term>homological functor</term>.
        </p>
      </statement>
      <proof>
        <p>
          We may as well start with the triangle associated to a mapping cone. In this case, the morphism <m>\delta</m> coincides with the family of connecting homomorphisms
          coming from the short exact sequence of complexes
          <me>
            0 \to L^\bullet \to \Cone(f)^\bullet \to K^\bullet[1] \to 0
          </me>
          and so the sequence in question is just the long exact sequence in cohomology.
          Alternatively, we can first prove <xref ref="lem-distinguished-triangle-rotation"/> and then use this to reduce to checking exactness at <m>H^i(C^\bullet)</m>.
       </p>
      </proof>
    </lemma>
    <lemma xml:id="lem-distinguished-triangle-rotation">
      <statement>
        <p>
          The set of distinguished triangles is preserved by forward and backward rotation.
        </p>
      </statement>
      <proof>
        <p>
          The set of distinguished triangles is preserved by the shift operators, so it will be enough to check preservation by forward rotation.
          That is, given a triangle of the form
          <me>
            K^\bullet \stackrel{f}{\to} L^\bullet \stackrel{g}{\to} \Cone(f)^\bullet \stackrel{h}{\to} K^\bullet[1]
          </me>
          we must produce a commutative diagram in <m>K(\calA)</m> of the form of <xref ref="fig-triangulated-category-fillin1"/>
          in which the dashed arrow is an isomorphism in <m>K(\calA)</m>.
        </p>
        <figure xml:id="fig-triangulated-category-fillin1">
          <image width="50%">
            <latex-image>
              \xymatrix{
                L^\bullet \ar@{=}[d] \ar^{g}[r] &amp; \Cone(f)^\bullet \ar@{=}[d] \ar^{h}[r] &amp; K[1]^\bullet \ar@{-->}[d] \ar^{f[1]}[r] &amp; L[1]^\bullet \ar@{=}[d] \\
                L^\bullet \ar^{g}[r] &amp; \Cone(f)^\bullet \ar[r] &amp; \Cone(g)^\bullet \ar[r] &amp; L[1]^\bullet
              }
            </latex-image>
          </image>
        </figure>
        <p>
          We construct the arrow <m>K[1]^\bullet \to \Cone(g)^\bullet = \Cone(f)^\bullet \oplus L[1]^\bullet</m> 
          so that the first factor is the injection <m>K^{n+1} \to L^n \oplus K^{n+1}</m> and the second factor is <m>-f^{n+1}</m>.
          We construct the arrow <m>\Cone(f)^\bullet \oplus L[1]^\bullet = \Cone(g)^\bullet \to K[1]^\bullet</m> 
          as the projection onto <m>\Cone(f)^n \oplus L^{n+1} \to \Cone(f)^n</m> followed by <m>h^n</m>.
          One may check as in <xref ref="bib-Stacks"/>, tag 014I that these maps are inverses in <m>K(\calC)</m>.
        </p>
      </proof>
    </lemma>
    <corollary xml:id="cor-extend-to-distinguished-triangle">
      <statement>
        <p>
          Any morphism in <m>K(\calC)</m> can be included into a distinguished triangle (in any position).
        </p>
      </statement>
      <proof>
        <p>
          Any morphism can be included as the first morphism of a distinguished triangle using the mapping cone. For the other positions,
          apply <xref ref="lem-distinguished-triangle-rotation"/>.
        </p>
      </proof>
    </corollary>
    <lemma xml:id="cor-distinguished-triangle-fillin">
      <statement>
        <p>
          Given any collection of solid arrows in <xref ref="fig-triangulated-category-fillin"/> forming a commutative diagram in <m>K(\calA)</m>, 
          in which the rows form distinguished triangles,
          there exists a dashed morphism such that the vertical arrows form a morphism of triangles in <m>K(\calA)</m>.
        </p>
        <figure xml:id="fig-triangulated-category-fillin">
          <image width="50%">
            <latex-image>
              \xymatrix{
                A^\bullet \ar^{f}[r] \ar^{a}[d] &amp; B^\bullet \ar^{g}[r] \ar^{b}[d] &amp; C^\bullet \ar^{h}[r] \ar@{-->}[d] &amp; A[1]^\bullet \ar^{a[1]}[d] \\
                A^{\prime \bullet} \ar^{f'}[r] &amp; B^{\prime \bullet} \ar^{g'}[r] &amp; C^{\prime \bullet} \ar^{h'}[r] &amp; A'[1]^\bullet
              }
            </latex-image>
          </image>
        </figure>
      </statement>
      <proof>
        <p>
          We may assume at once that <m>C = \Cone(f), C' = \Cone(f')</m>.
          In this case, commutativity of the square in <m>K(\calA)</m> implies the existence of a homotopy <m>h</m> for the map 
          <m>b \circ f - f' \circ a</m>. We may then write down a morphism <m>c: \Cone(f) \to \Cone(f')</m> by the formula
          <me>
            c^n = \begin{pmatrix} b^n &amp; h^{n+1} \\ 0 &amp; a^{n+1} \end{pmatrix}: B^n \oplus A^{n+1} \to B^{\prime n} \oplus A^{\prime (n+1)}
          </me>
          and verify that this yields a morphism of triangles.
          (Compare <xref ref="bib-Stacks"/>, tag 014F.)
        </p>
      </proof>
    </lemma>
    <p>
      The following result is akin to the universal property of kernels and cokernels.
    </p>
    <corollary xml:id="cor-mapping-cone-universal-property">
      <statement>
        <p>
          Let <m>f: X^\bullet \to Y^\bullet</m> be a morphism in <m>K(\calC)</m>.
          Then every morphism <m>h: Y^\bullet \to Z^\bullet</m> such that <m>h \circ f = 0</m> in <m>K(\calC)</m> can be factored
          through <m>Y^\bullet \to \Cone(f)^\bullet</m>.
        </p>
      </statement>
      <proof>
        <p>
          Apply <xref ref="cor-distinguished-triangle-fillin"/> to the diagram in <xref ref="fig-triangulated-category-fillin3"/>.
        </p>
        <figure xml:id="fig-triangulated-category-fillin3">
          <image width="50%">
            <latex-image>
              \xymatrix{
                X^\bullet \ar^{f}[r] \ar^{0}[d] &amp; Y^\bullet \ar[r] \ar^{h}[d] &amp; \Cone(f)^\bullet \ar[r] \ar@{-->}[d] &amp; X[1]^\bullet \ar^{a[1]}[d] \\
                0 \ar[r] &amp; Z^{\bullet} \ar^{\id}[r] &amp; Z^{\bullet} \ar[r] &amp; 0^\bullet
              }
            </latex-image>
          </image>
        </figure>
      </proof>
    </corollary>
  </subsection>
  <subsection>
    <title>Localization at quasi-isomorphisms</title>
    <p>
      We return to our unfinished business from <xref ref="rmk-derived-motivation3"/>, namely modifying the homotopy category so as to force every quasi-isomorphism
      to acquire an inverse. Thanks to the cone construction, we can relate quasi-isomorphisms to acyclic objects, which are easier to handle.
    </p>
    <definition>
      <p>
        An object <m>K^\bullet</m> of <m>\Comp(\calA)</m> is <term>acyclic</term> if <m>H^n(K^\bullet) = 0</m> for all <m>n \in \ZZ</m>;
        this property is preserved under isomorphisms in <m>K(\calA)</m>.
        By <xref ref="lem-homological-functor"/>, if two of the three complexes in a distinguished triangle are acyclic, then so is the third.
        From this (and the preservation of the acyclic property under shifts) we may deduce that 
        the full subcategory of <m>K(\calA)</m> consisting of acyclic objects is also a triangulated category.
      </p>
    </definition>
    <lemma xml:id="lem-quasi-isomorphism-from-triangle">
      <statement>
        <p>
          A morphism <m>f: K^\bullet \to L^\bullet</m> in <m>K(\calA)</m> is a quasi-isomorphism if and only if there exists a distinguished triangle
          <m>(K^\bullet, L^\bullet, M^\bullet, f, g, h)</m> in which <m>M^\bullet</m> is acyclic.
        </p>
      </statement>
      <proof>
        <p>
          This is immediate from <xref ref="lem-homological-functor"/>, using the mapping cone for the <q>only if</q> direction.
        </p>
      </proof>
    </lemma>
    <proposition xml:id="prop-quasi-isomorphisms-multiplicative">
      <statement>
        <p>
          The set of quasi-isomorphisms in <m>K(\calA)</m> is a saturated multiplicative system in the sense of <xref ref="def-multiplicative-system"/>.
        </p>
      </statement>
      <proof>
        <p>
          It suffices to check the conditions for a left multiplicative system, as the symmetric argument will imply the conditions for a right multiplicative system.
          The first condition in <xref ref="def-multiplicative-system"/> is evidently satisfied: every identity morphism is a quasi-isomorphism, and any composition
          of quasi-isomorphisms is a quasi-isomorphism.
        </p>
        <p>
          To check the second condition, apply <xref ref="cor-extend-to-distinguished-triangle"/> to fit <m>g</m> into a distinguished triangle <m>(X, Y, Z, g, h, i)</m>,
          then set <m>Y' = \Cone(i[-1])</m>; we obtain the map <m>s</m> by filling the diagram <xref ref="fig-triangulated-category-fillin2"/> using
          <xref ref="lem-distinguished-triangle-rotation"/> (to rotate) and <xref ref="cor-distinguished-triangle-fillin"/>.
          (We deduce from <xref ref="lem-homological-functor"/> that <m>s</m> is a quasi-isomorphism.)
        </p>
        <figure xml:id="fig-triangulated-category-fillin2">
          <image width="50%">
            <latex-image>
              \xymatrix{
                X \ar^{g}[r] \ar^{s}[d] &amp; Y \ar^{h}[r] \ar@{-->}^t[d] &amp; Z \ar^{i}[r] \ar@{=}[d] &amp; X[1] \ar^{s[1]}[d] \\
                X' \ar[r] &amp; Y' \ar[r] &amp; Z \ar[r] &amp; X'[1]
              }
            </latex-image>
          </image>
        </figure>
        <p>
          To check the third condition, start with a morphism <m>f: X \to Y</m> and a quasi-isomorphism <m>t: Z \to X</m> such that <m>f \circ t = 0</m>,
          Apply <xref ref="cor-extend-to-distinguished-triangle"/> to fit <m>t</m> into a distinguished triangle <m>(Z, X, Q, t, d, h)</m>.
          By <xref ref="cor-mapping-cone-universal-property"/>, we can choose a morphism <m>i: Q \to Y</m> such that <m>i \circ d = f</m>.
          Apply  <xref ref="cor-extend-to-distinguished-triangle"/> again to fit <m>i</m> into a distinguished triangle <m>(Q, Y, W, i, j, k)</m>;
          then <m>j \circ f = j \circ i \circ d = 0 \circ d = 0</m>.
          By <xref ref="lem-quasi-isomorphism-from-triangle"/>, <m>t</m> being a quasi-isomorphism implies that <m>Q</m> is acyclic,
          which in turn implies that <m>j</m> is a quasi-isomorphism.
          (Compare <xref ref="bib-Stacks"/>, 05RG.)
        </p>
        <figure xml:id="fig-triangulated-category-fillin4">
          <image width="50%">
            <latex-image>
              \xymatrix{
                Z \ar^{t}[r] &amp; X \ar@{=}[d] \ar^{d}[r] &amp; Q \ar^h[r] \ar^{i}[d] &amp; Z[1] \\
                &amp; X \ar^{f}[r] &amp; Y \ar^j[d] \\
                &amp; &amp; W
              }
            </latex-image>
          </image>
        </figure>
      </proof>
    </proposition>
    <definition>
      <p>
        Suppose that <m>\calA</m> is a small abelian category. By <xref ref="prop-quasi-isomorphisms-multiplicative"/>, we may apply
        <xref ref="def-left-localization"/> to construct the localization of <m>K(\calA)</m> at the saturated multiplicative system of quasi-isomorphisms.
        The result is called the <term>derived category</term> of <m>\calA</m>, denoted <m>D(\calA)</m>. Similarly, we may define the
        <term>bounded below derived category</term> <m>D^+(\calA)</m>, the
        <term>bounded above derived category</term> <m>D^-(\calA)</m>, and the
        <term>bounded derived category</term> <m>D^b(\calA)</m>.
      </p>
      <p>
        An important case is when <m>\calA</m> is the category of modules over a ring <m>A</m>. This is not a small category, but modulo
        set-theoretic issues (see <xref ref="rmk-derived-category-ring"/>) we can still define <m>D^*(\calA)</m> for <m>* \in \{\emptyset, -, +, b\}</m>;
        we denote this also by <m>D^*(A)</m>.
      </p>
    </definition>
    <remark xml:id="rmk-derived-category-ring">
      <p>
        To work around the fact that the derived category construction requires a small abelian category as input, one can view the full category <m>\Mod_A</m>
        as a 2-colimit of full subcategories consisting of modules of increasingly larger cardinalities. This works because <m>\Mod_A</m> is not just an abelian
        category but a <term>Grothendieck abelian category</term>; see <xref ref="bib-Stacks"/>, tag 09PA.
        For a more general abelian category <m>\calA</m>, however, the set-theoretic difficulty becomes a genuine obstruction; see <xref ref="bib-Stacks"/>, tag 07JS.
      </p>
    </remark>
    <remark>
      <p>
        Just as the properties of the category <m>\Mod_A</m> are abstracted by the notion of an <term>abelian category</term>,
        the properties of homotopy categories and derived categories are abstracted by the notion of a <term>triangulated category</term>.
        A triangulated category is an additive category equipped with a collection of <term>distinguished triangles</term>
        and <term>shift functors</term> subject to various conditions analogous to some of the properties we have seen above
        (especially <xref ref="lem-distinguished-triangle-rotation"/> and <xref ref="cor-distinguished-triangle-fillin"/>).
        See <xref ref="bib-Stacks"/>, tag 05QI for further discussion.
      </p>
    </remark>
    <proposition>
      <statement>
        <p>
          Assume that <m>\calA</m> has enough injectives and let <m>F: \calA \to \calA'</m> be a left exact functor. Then the
          right derived functor <m>RF: K^+(\calA) \to K^+(\calA')</m> (see <xref ref="def-derived-functions-homotopy-category"/>)
          takes acyclic objects to acyclic objects, and so induces a functor <m>RF: D^+(\calA) \to D^+(\calA')</m>.
        </p>
      </statement>
      <proof>
        <p>
          The right derived functor preserves distinguished triangles, so using the criterion of <xref ref="lem-quasi-isomorphism-from-triangle"/>
          it is enough to check that <m>RF</m> takes acyclic objects to acyclic object.
          For this, see <xref ref="bib-Stacks"/>, tag 05TA.
        </p>
      </proof>
    </proposition>
  </subsection>
  <subsection>
    <title>Truncation</title>
    <definition xml:id="def-canonical-truncation">
      <p>
        For <m>K^\bullet \in \calC</m> and any <m>n \in \ZZ</m>, the <term>canonical truncation</term> <m>\tau^{\geq n} K^\bullet</m> is the complex given by the second row of
        <xref ref="fig-complex-truncation"/>, equipped with the morphism <m>K^\bullet \to \tau^{\geq n} K^\bullet</m> defined by the vertical arrows.
      </p>
        <figure xml:id="fig-complex-truncation">
          <image width="75%">
            <latex-image>
              \xymatrix{
                \cdots \ar[r] &amp; K^{n-1} \ar^{d^{n-1}}[r] \ar^{0}[d] &amp; K^n \ar^{d^n}[r] \ar[d] &amp; K^{n+1} \ar^{d^{n+1}}[r] \ar@{=}[d] &amp; \cdots \\
                \cdots \ar[r] &amp; 0 \ar[r] &amp; \coker(d^{n-1}) \ar^{d^0}[r] &amp; K^{n+1} \ar^{d^{n+1}}[r] &amp; \cdots
              }
            </latex-image>
          </image>
        </figure>
      <p>
        Similarly, the <term>canonical truncation</term> <m>\tau^{\leq n} K^\bullet</m> is the complex given by the first row of <xref ref="fig-complex-truncation-above"/>,
        equipped with the morphism <m>\tau^{\leq n} K^\bullet \to K^\bullet</m> defined by the vertical arrows.
      </p>
        <figure xml:id="fig-complex-truncation-above">
          <image width="75%">
            <latex-image>
              \xymatrix{
                \cdots \ar[r] &amp; K^{n-1} \ar^{d^{n-1}}[r] \ar@{=}[d] &amp; \ker(d^n) \ar[r] \ar[d] &amp; 0 \ar[r] \ar^0[d] &amp; \cdots  \\
                \cdots \ar[r] &amp; K^{n-1} \ar^{d^{n-1}}[r] &amp; K^n \ar^{d^n}[r] &amp; K^{n+1} \ar^{d^{n+1}}[r] &amp; \cdots
              }
            </latex-image>
          </image>
        </figure>
    </definition>
    <lemma xml:id="lem-truncation-complexes">
      <statement>
        <p>
          For any interval <m>I</m>, the following conditions on an object <m>K^\bullet \in D(A)</m> are equivalent.
        </p>
        <ol>
          <li>
            <p>
              We have <m>H^i(K^\bullet) = 0</m> for all <m>i \notin I</m>.
            </p>
          </li>
          <li>
            <p>
              There exists an isomorphism <m>K^\bullet \to L^\bullet</m> in <m>D(A)</m> such that <m>L^i = 0</m> for all <m>i \notin I</m>.
            </p>
          </li>
        </ol>
      </statement>
      <proof>
        <p>
          Suppose for simplicitly that <m>I = [0, \infty)</m>, the other cases being similar.
          In this case, if <m>H^i(K^\bullet) = 0</m> for all <m>i \lt 0</m>, then the morphism <m>K^\bullet \to \tau^{\geq 0} K^\bullet</m> is a quasi-isomorphism.
        </p>
      </proof>
    </lemma>
    <corollary>
      <statement>
        <p>
          An object <m>K^\bullet</m> of <m>D(\calA)</m> belongs to <m>D^+(\calA), D^-(\calA), D^b(\calA)</m> if and only if <m>H^i(K^\bullet) = 0</m>
          for respectively <m>i \gg 0, i \ll 0, |i| \gg 0</m>.
        </p>
      </statement>
      <proof>
        <p>
          This is immediate from <xref ref="lem-truncation-complexes"/>.
        </p>
      </proof>
    </corollary>
    <remark>
      <p>
        It also follows from <xref ref="lem-truncation-complexes"/> that <m>D^+(\calA), D^-(\calA), D^b(\calA)</m> are all <em>full</em> subcategories of <m>D(\calA)</m>.
        For example, for <m>D^+(\calA)</m> this holds because if we have two bounded-below complexes, any morphism between them is <em>automatically</em> zero at all
        sufficiently small indices (because any map between two zero objects is zero). 
      </p>
    </remark>
    <remark>
      <p>
        By <xref ref="lem-truncation-complexes"/> applied with <m>I = \{0\}</m>, the essential image of the functor <m>[0]: \calA \to D(\calA)</m> is precisely the 
        intersection of the essential images of the functors <m>\tau^{\geq 0}, \tau^{\leq 0}: D(\calA) \to D(\calA)</m>.
      </p>
      <p>
        In the more general framework of triangulated categories, one can define a <term>t-structure</term> (short for <term>truncation structure</term>)
        to be a pair of functors <m>\tau^{\geq 0}, \tau^{\leq 0}</m> satisfying suitable conditions, and then define the <term>heart</term> of the t-structure
        as the intersection of the essential images of these functors. This gives us a way to start with a triangulated category and realize it as a derived category;
        in fact, by varying the t-structure we can sometimes realize the same triangulated category as a derived category in multiple ways!
        (The motivating example of this is the construction of <term>perverse sheaves</term> in connection with the Weil conjectures; see <xref ref="bib-Kiehl-Weissauer"/>.)
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Pseudocoherent and perfect complexes</title>
    <p>
      Let us now specialize to the category of modules over a ring and introduce some additional boundedness conditions.
    </p>
    <definition>
      <p>
        For <m>A \in \Ring, \calA = \Mod_A</m>, an object <m>K^\bullet</m> of <m>D(A) = D(\calA)</m> is <term>pseudocoherent</term> (resp. <term>perfect</term>)
        if it is isomorphic to a bounded above (resp. bounded) complex of finite projective <m>A</m>-modules.
        An object of <m>\Mod_A</m> is <term>pseudocoherent</term> (resp. <term>perfect</term>) if <m>M[0]</m> is so as an object of <m>D(A)</m>.
      </p>
    </definition>
    <lemma>
      <statement>
        <p>
          For <m>A \in \Ring</m>, an object <m>K^\bullet</m> of <m>D(A)</m> is perfect if and only if it is pseudocoherent and has finite Tor dimension.
        </p>
      </statement>
      <proof>
        <p>
          See <xref ref="bib-Stacks"/>, tag 0658.
        </p>
      </proof>
    </lemma>
    <remark>
      <p>
        If <m>A</m> is a noetherian ring, then a module is pseudocoherent if and only if it is finitely presented,
        but such a module need not be perfect.
      </p>
      <p>
        That said, there do exist many noetherian rings over which every pseudocoherent module is perfect.
        For example, the ring <m>A</m> is said to have <term>finite global dimension</term> if there exists an integer <m>n</m> such that every <m>A</m>-module
        admits a resolution by projective <m>A</m>-modules of length <m>n</m>. If <m>A</m> is of finite projective dimension, then every pseudocoherent <m>A</m>-module
        is perfect. (See <xref ref="bib-Stacks"/>, tag 00O2.)
      </p>
      <p> 
        An important special case is the ring <m>A = k[x_1,\dots,x_n]</m> where <m>k</m> is a field. This ring has finite global dimension (bounded by <m>n</m>, the number
        of variables) by the Hilbert syzygy theorem (<xref ref="bib-Stacks"/>, tag 00OQ).
      </p>
    </remark>
  </subsection>
  <exercises>
    <exercise>
      <statement>
        <p>
          Let <m>A</m> be a commutative ring. Show that if any two terms of a distinguished triangle in <m>D(A)</m> are pseudocoherent (resp. perfect), then so is the third.
        </p>
      </statement>
      <hint>
       <p>
         See <xref ref="bib-Stacks"/>, tag 066R.
       </p>
      </hint>
    </exercise>
    <exercise>
      <statement>
        <p>
          Let <m>A</m> be a commutative ring. Prove that if <m>K^\bullet \in D^b(A)</m> has the property that <m>H^i(K^\bullet)</m> is perfect for all <m>i</m>,
          then <m>K^\bullet</m> is perfect.
        </p>
      </statement>
      <hint>
        <p>
          See <xref ref="bib-Stacks"/>, tag 066U.
        </p>
      </hint>
    </exercise>
    <exercise xml:id="exer-derived-completion-totalization">
      <statement>
        <p>
          Let <m>J</m> be a finitely generated ideal of <m>A \in \Ring</m>. Let <m>A \to A'</m> be a morphism in <m>\Ring</m> with finite <m>J</m>-complete Tor amplitude
          (see <xref ref="def-I-completely-flat"/>). 
        </p>
        <ol>
          <li>
            <p>
              Show that there exists some <m>c \geq 0</m> such that for any <m>K \in D^{\geq 0}(A)</m>, <m>K \widehat{\otimes}^L_A A' \in D^{\geq -c}(A')</m>.
            </p>
          </li>
          <li>
            <p>
              Show that the derived <m>J</m>-completed base change functor <m>M^\bullet \mapsto M^\bullet \widehat{\otimes}^L_A A'</m> commutes with totalizations in <m>D^{\geq 0}</m>.
            </p>
          </li>
        </ol>
      </statement>
      <hint>
        <p>
          For (1), choose generators <m>x_1,\dots,x_r</m> of <m>J</m> and use derived Nakayama (<xref ref="prop-derived-complete-abelian-derived"/> to reduce to checking that for some <m>c</m>,
          <me>
            K \mapsto (K \otimes^L_A A') \otimes^A_{A'} \Kos(C'; x_1,\dots,x_r)
          </me>
          takes <m>D^{\geq 0}(A)</m> to <m>D^{\geq -c}(A)</m> (where now the tensor products are uncompleted).
          For more details, see <xref ref="bib-Bhatt-Scholze"/>, Lemma 4.20.
        </p>
      </hint>
    </exercise>
  </exercises>
</section>
